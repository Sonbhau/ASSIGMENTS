/*ACCEPT N NUMBERS FROM USER AND ACCEPT ONE ANOTHER NUMBER AS NO ,
CHECK WHETHER NO IS PRESENT OR NOT*/


# include<stdio.h>
# include<stdlib.h>
# include <stdbool.h>


bool Check (int *Arr,int iSize,int iNo)
{  int iCnt = 0;
   
    for(iCnt=0;iCnt<iSize;iCnt++)
    {
        if(Arr[iCnt]==iNo)
        {
          return true;
        }
       
    }
   return false; 
}

int main()
{
    int iCount = 0;
    int *ptr = NULL;
    int iCnt = 0;
    bool bRet =  false ;
    int iValue = 0;
    printf("Enter the number of elements :\n");
    scanf("%d",&iCount);
    printf("Enter the number:");
    scanf("%d",&iValue);
    ptr = (int*)malloc(iCount*sizeof(int));
    printf("Enter the elements :\n");
    for(iCnt=0;iCnt<iCount;iCnt++)
    {
        scanf("%d",&ptr[iCnt]);
    }

bRet = Check(ptr,iCount,iValue);

if(bRet==true)
{
    printf("TRUE");
}
else
{
    printf("FALSE");
}
   
   free(ptr);
   
    return 0;
}
/*ACCEPT N NUMBER FROM USER AND ACCEPT ONE ANOTHER NUMBER AS NO ,
RETURN INDEX OF FIRST OCCURENCE OF THAT NO*/


# include<stdio.h>
# include<stdlib.h>

int FirstOcc(int *Arr,int iSize,int iNo)
{  int iCnt = 0;
   
    for(iCnt=0;iCnt<iSize;iCnt++)
    {
        if(Arr[iCnt]==iNo)
        {
          return iCnt;
        }
       
    }
    return -1;
   
}

int main()
{
    int iCount = 0;
    int *ptr = NULL;
    int iCnt = 0;
    int iRet =  0 ;
    int iValue = 0;
    printf("Enter the number of elements :\n");
    scanf("%d",&iCount);
    printf("Enter the number");
    scanf("%d",&iValue);
    ptr = (int*)malloc(iCount*sizeof(int));
    printf("Enter the elements :\n");
    for(iCnt=0;iCnt<iCount;iCnt++)
    {
        scanf("%d",&ptr[iCnt]);
    }

iRet = FirstOcc(ptr,iCount,iValue);

printf("Result is:%d",iRet);
   
   free(ptr);
   
    return 0;
}
/*ACCEPT N NUMBER FROM USER AND ACCEPT ONE ANOTHER NUMBER AS NO ,
RETURN INDEX OF LAST OCCURENCE OF THAT NO.*/



# include<stdio.h>
# include<stdlib.h>

int LastOcc(int *Arr,int iSize,int iNo)
{  int iCnt = 0; 

  int iOcc = iCnt;
    for(iCnt=0;iCnt<iSize;iCnt++)
    {
        if(Arr[iCnt]==iNo)
        {
    return iOcc;
        }
       
    }
   return -1;
}

int main()
{
    int iCount = 0;
    int *ptr = NULL;
    int iCnt = 0;
    int iRet =  0 ;
    int iValue = 0;
    printf("Enter the number of elements :\n");
    scanf("%d",&iCount);
    printf("Enter the number");
    scanf("%d",&iValue);
    ptr = (int*)malloc(iCount*sizeof(int));
    printf("Enter the elements :\n");
    for(iCnt=0;iCnt<iCount;iCnt++)
    {
        scanf("%d",&ptr[iCnt]);
    }

iRet = LastOcc(ptr,iCount,iValue);

printf("Result is:%d",iRet);
   
   free(ptr);
   
    return 0;
}

/*ACCEPT N NUMBERS FROM USER AND ACCEPT RANGE , DISPLAY ALL ELEMENTS FROM
THAT RANGE*/

# include<stdio.h>
# include<stdlib.h>

void Range(int *Arr,int iSize,int iNo,int iNo1)
{  int iCnt = 0; 

  int iOcc = iCnt;
    for(iCnt=0;iCnt<iSize;iCnt++)
    {
        if((Arr[iCnt]>iNo)&&(Arr[iCnt]<iNo1))
        {
      
      printf("%d\t",Arr[iCnt]);
        }
       
    }
  
}

int main()
{
    int iCount = 0;
    int *ptr = NULL;
    int iCnt = 0;
    int iValue = 0;
    int iValue1 = 0;
    printf("Enter the number of elements :\n");
    scanf("%d",&iCount);
    printf("Enter the starting point number:");
    scanf("%d",&iValue);
    printf("Enter the ending point number:");
    scanf("%d",&iValue1);
    ptr = (int*)malloc(iCount*sizeof(int));
    printf("Enter the elements :\n");
    for(iCnt=0;iCnt<iCount;iCnt++)
    {
        scanf("%d",&ptr[iCnt]);
    } 

    Range(ptr,iCount,iValue,iValue1);
   free(ptr);
   
    return 0;
}

/*ACCEPT N NUMBERS FROM USER AND RETURN PRODUCT OF ALL ODD ELEMENTS*/

# include<stdio.h>
# include<stdlib.h>

int Product(int *Arr,int iSize)
{  int iCnt = 0; 
   int iMultiply = 1;
    for(iCnt=0;iCnt<iSize;iCnt++)
    {
      if((Arr[iCnt]%2)>=1)
      {
        iMultiply = iMultiply*Arr[iCnt];
        return iMultiply;
      }
       
    }
  
  return 0 ;
}

int main()
{
    int iCount = 0;
    int *ptr = NULL;
    int iCnt = 0;
    int iRet = 0;
    printf("Enter the number of elements :\n");
    scanf("%d",&iCount);
    ptr = (int*)malloc(iCount*sizeof(int));
    printf("Enter the elements :\n");
    for(iCnt=0;iCnt<iCount;iCnt++)
    {
        scanf("%d",&ptr[iCnt]);
    } 

    iRet = Product(ptr,iCount);

    printf("Result is :%d",iRet);
   free(ptr);
   
    return 0;
}




